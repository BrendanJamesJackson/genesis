\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename Genesis.info
@settitle Genesis Manual 0.2
@c %**end of header

@set VDATE   1 October 2015

@set VERSION 0.2.6
@set YEAR 2015

@titlepage
@title The @samp{Genesis} Manual
@subtitle Version @value{VERSION}
@author Robert Buchmann and Scott Hazelhurst

Copyright @copyright{} @value{YEAR}, University of the Witwatersrand, Johannesburg     


@end titlepage
     
@c Output the table of contents at the beginning.
@c contents

@ifnottex

@node Top,Description,,(dir)

The @code{Genesis} tools allow the user to generate PCA and Admixture diagrams.

@noindent
This is the @code{Genesis} manual. 

@end ifnottex
    
@menu

* Description:: What Genesis does

* Installing and Running Genesis:: How to install and run it

* Creating Structure Plots :: How to use Genesis' features to create and modify Structure graphs

* Creating PCA Plots :: How to use Genesis' features to create and modify PCA plots

* Saving and Exporting :: Using @code{Genesis} to save and load projects and to export graphs

* Conclusion :: The end

@end menu


@node Description, Installing and Running Genesis, Top, Top

@chapter Description

@section Introduction 
@noindent
This manual describes @code{Genesis}, a program created for scientists
to generate PCA (Principal Component Analysis) and structure/admixture
graphs from data outputted by common tools such as eigenstrat [Pritchard
et al. 2000] and the SNPRelate [Zheng et al 2012] package for PCAs and
Admixture [Alexander et al. 2009] and CLUMPP [Jakobsson and Rosenberg
2007] for admixtures.

Genesis was developed with user-friendliness in mind as other tools can
be complex to use and lack certain features. All elements of the graphs
that would need to be edited can be done so using a graphical user
Interface where the graphs themselves are interactive and different
elements can be viewed and changed at the click of the mouse. All this
saves the time that scientists would rather be spending doing more
important things.

Principal Component Analysis is a mathematical and statistical procedure
that can used to analyse genotype data. The differences between samples'
genotype data can be used to project each sample into a
@emph{p}-dimensional space, where the @emph{p} axes are
uncorrelated. For realistic data, typically @emph{p} is 4 or less and
often only the most important two demsnions are used. Programs such as
@code{eigenstrat} produce the the PCs, and @code{Genesis} produces
them. An example is found below:


@iftex
@image{pca,15cm}
@end iftex

@ifhtml
@image{pca,10cm}
@end ifhtml

Admixture mappings are used to analyse populations of mixed ancestry and
determine the ratios of proposed different ancestries. These ratios can
then displayed in stacked bar graphs as structure/admixture graphs.

@iftex
@image{admix,15cm}
@end iftex

@ifhtml
@image{admix,15cm}
@end ifhtml



@section Assumptions

This manual assumes that the reader is familiar with structure and PCA
analysis of genotype data, and has used tools such as admixture,
Eigenstrat and/or plink [Purcell et al 2007; Purcell and Chang 2014].


@section Licence

@code{Genesis} was written by Robert W Buchmann, and copyright is owned
by the University of the Witwatersrand, Johannesburg. The code is
released under the Affero General Public Licence version
3. @code{Genesis} uses the iText Software Corporation's iText library
also released under the Affero General Public Licence.




@node Installing and Running Genesis, Creating Structure Plots, Description,Top

@chapter Installing and Running @code{Genesis}


@section Installing @code{Genesis}

The latest code can be found at
@url{http://www.bioinf.wits.ac.za/software/genesis}


@code{Genesis} does not special installation and the file can simply be
executed using Java. It does, however, @b{require the Java SE Runtime
Environment 1.7 or higher to be installed on the user's system}. 
The latest version of the Java SE Runtime Environment 1.7 can be found at: 
@url{http://www.oracle.com/technetwork/java/javase/downloads/jre7-downloads-1880261.html}

To check if you already have Java installed, you can open your Operating
System's command line interface and enter

@code{java -version}

@noindent
If Java is installed, one line of the response should read 

@code{Java(TM) SE Runtime Environment (build 1.x.0_*)}

@noindent
where x is the version number (and should be 7 or higher) and the @code{*} is not important.

Alternatively, Windows users can open Control Panel and then open @code{Add/Remove Programs} and check the list for Java SE Runtime Environment (in windows XP and earlier) or open @code{Programs} then @code{Programs and Features} and if @code{Java} x is in the list, then Java is installed where x is the version number (in Windows Vista, 7 or 8).

@b{Mac OSX requires X11 to be installed.} This can be downloaded from
@url{http://xquartz.macosforge.org/landing/}.

@code{Genesis} is compatible with the 32 and 64 bit varieties of
Windows, Mac OSX and Linux.

If you are using a version of Java other than Oracle's, you may need to
install the SWT libraries separately. On Ubuntu, installing openjdk, the
following should work

@verbatim
apt-get install jre-default

OR (but NOT both)

apt-get install  libswt-gtk-3-java  openjdk-7-jre-headless
@end verbatim


@section Running @code{Genesis}

@b{Windows and Linux} If the Java SE Runtime Environment 1.7 is installed, the user should be able to open @code{Genesis} by double-clicking the file. If this does not work, the user will have to launch the jar manually through a command line editor (cmd in windows or terminal in linux) using the following command.

@code{java -jar Genesis.jar}


@b{For Linux and MacOSX} the recommended configuration is to unzip,
@code{cd} into the genesis-distrib directory and then say

@verbatim
sudo mv Genesis.jar misc/genesis /usr/local/bin
sudo chmod a+x /usr/local/bin/genesis
@end verbatim

@noindent
and then, the program can be run by executing the command @code{genesis}

@b{OS X}:
Ensure that the Java SE Runtime Environment 1.7 is installed. In OSX, the user must launch the file through the command line with an extra argument as follows

@code{java -XstartOnFirstThread -jar Genesis.jar}


@b{Wrapper script} A simple wrapper script @code{genesis} is provided to
aid the use of the program which works for Linux or MacOS
X. Installation of the JAR and wrapper can be done by running
@code{install.sh}. By default, the script installs into
@code{/usr/local/bin}. If you want it elsewhere, specify the directory
name, e.g @code{./install.sh /Users/scott/bin}. You may need @code{sudo}
privileges.

@b{Memory usage}: If you are building up very complex charts (e.g, in a
large study doing admixture charts for 6 or 7 values of K on the same
Genesis chart), you may require extra memory when running Genesis.

@verbatim
java -Xmx2048m -Xms521m -jar Genesis.jar
@end verbatim

@section Known bugs

@itemize
@item On MacOS X, when the program is first run the SWT menu does not
appear on the menu bar. If you make another application active and then
come back to Genesis, the menu appears. This appears to be a bug of SWT
on MacOS X.
@item Using some versions of SWT, occasionally when opening a previous
project the program crashes with an obscure error message. Update your
SWT to a later version. We try to package the latest available version
with Genesis. (This appears to have gone away with the latest version
of SWT).



@end itemize


@section Supported input data formats

For structure charts, @code{Genesis} supports the output of the
@code{admixture} and @code{CLUMPP} programs. In addition, we provide a
python script that will convert the output of the @code{structure}
program into the appropriate input format. See @xref{Creating Structure Plots}.

For PCA charts, @code{Genesis} supports the output of the
@code{eigenstrat} and @code{plink} programs and the SNPRelate R package. In addition, we
provide Python scripts that will convert the output of the
@code{fastpca} program into the appropriate
format. See @xref{Creating PCA Plots}.

We shall try to add to the suite of conversion scripts, but we intend
that future versions of @code{Genesis} will automatically detect the
correct input format and deal appropriately.


@section Menu structure

When @code{Genesis} runs, a menu appears at the top. The menu items are
@emph{File}, @emph{Graph} and @emph{Help}. @emph{File} allows creation
and saving of graphs, and exporting image files. @emph{Graph} allows
changing data and appearance options. The manual is available under help.

For added usability the icons with the key menu features apper at the
top of the @emph{Genesis} window. If the cursor is placed over the icon,
a brief description of the menu item is given. The menu items are
briefly described below and the functions are described in detail in
next sections.


@iftex
@image{n,12cm}
@end iftex


@ifhtml
@image{n,15cm}
@end ifhtml



From left to right, the menu items are:

@itemize

@item Admix: create a new Admixture chart

@item PCA: create a new PCA chart

@item Save Project: this saves the current charts being created in a
Genesis format file, which incorporates all changes the user has
made. This does not save images, but the internal state of the program
for later reloading.

@item Load Project: this loads a previously savied Genesis project. Note
that the New Admix and PCA options are used to create charts from raw output
of the admixture and PCA tools. The Load Project option loads previosly
saved charts.

@item Data Options: allows the user to provide constraints on the data
files used. For example, the user can specify which column in the file
contains the phenotype data, or which principal components should be
displayed.

@item Appearance Options: gives the user flexibility in determinig how
what the charts look like. Examples are: size of margin, choice of font
and size, headings and so on.

@item Refresh.

@item Show/Hide 3D Rotate Panel: if the user is showing a 3D PC chart,
simple rotation is supported.

@item Search for individual: the user can specify the ID of an
individual in the study and that inviduals data is highlighed in the
chart.

@item Unhide: individuals or groups can be hidden from the display. This
option allows unhiding.

@item Line: Simple lines can be drawn

@item Arrow: Simple arrows can be draw

@item Export: The picture can be exported to a PNG, SVG, or PDF file.

@item Close Project: The current chart is closed. If not previously
saved, it is deleted.

@end itemize



@node Creating Structure Plots, Creating PCA Plots, Installing and Running Genesis,Top

@chapter Structure Plots


@section Data input format

@code{Genesis} requires two input files and an optional  third file:

@itemize @bullet
@item An @emph{admixture} file which contains on each line the
estimated ancestral proportions of each individual.  Typically, this
would be produced by a program like Admixture (e.g, and admixture Q
file), or CLUMPP, the output formats of which Genesis supports
natively. For example, an Admixture Q file for @emph{K}=4, contains four
columns. Provided the input is a legal format, @code{Genesis} will
automatically work out what input file it is, and what the @emph{K}
value is. Instructions on using the @code{structure2CLUMPP} script which
can be used for Structure input files is described later.

@item A plink-style @emph{fam} file. The first two columns must uniquely
identify the individuals (the first column is usually the family
identifier, the second the individual identifier). See the plink manual
for further description. The @emph{j}-th line
of this fam file describes the @emph{j}-th individual in the admixture
file. This all that @code{Genesis} requires, although @emph{fam} files
typically have other columns as well.

@item Optionally, a phenotype file: again, the first two columns
indentify the individual, and subsequent columns label the individuals
(e.g., case/control, male/female, population group, language, etc). The
individual identifiers should be the same as in the fam file: each
individual in the fam file should also be in the phentoype file, but
there is no problem in having individuals in the phenotype file who are
not in the fam file. The order of entries in the phenotype file need not
be the same as in the fam file. You could use the same file as the fam
and the phenotype file.

@end itemize



@section Inputting Data

@code{Genesis} produces structure charts by taking input from 
Admixture or CLUMPP tools, together with a PLINK-style fam and
optionally a phenotype file which would contain population labels.

To input these files, click @code{File} click @code{New Admixture} or the
@code{New Admixture} button on the toolbar. On the screen that opens,
click @code{Import Data File} and navigate to the admixture data file
outputted by the Admixture/CLUMPP tools. Then click @code{Import Fam
File} and navigate to the fam data file. Finally, click @code{Import
Pheno File} and navigate to the phenotype data file.

You can import multiple data files into the same project by clicking
@code{Import Data File} again. These files can be imported in any order
relative to the importing of the fam and pheno file.

In the drop-down menu select the column of the phenotype file that will
be used to group the data. To draw the graph, click @code{Finish} or
click @code{Next} to access the Appearance Options menu (See below...).

@unnumberedsubsec Editing Phenotype Column/Importing Additional Data Files

If a graph has already been plotted, and you wish to change the column of the phenotype data used to group the data or import additional data files, you can access the initial menu by clicking the @code{Data Options} button on the toolbar, or clicking @code{Graph} click @code{Data Options}.

@section Appearance Options

The Appearance Options menu can be accessed through the @code{New
Admixture} button by clicking @code{Next} after importing the files or
by clicking the @code{Appearance Options} button on the toolbar, or
clicking @code{Graph} click @code{Appearance Options}.

@itemize
@item Heading

To set/change the heading, open the @code{Appearance Options} menu and type the heading into the text box that says ``Set Heading.'' To change the font of the heading, click @code{Select Heading Font} and select the font of choice.

@item Border

To show/hide the border open the @code{Appearance Options} menu and (un)check the @code{Show Border} checkbox.

@item Population Group Labels

To show/hide the population group labels, open the @code{Appearance Options} menu and (un)check the @code{Show Population Group Labels} checkbox.  To change the font of the population group labels, click @code{Select Population Group Label Font} and select the font of choice.

@item Graph Size and Spacing

To change the size and spacing of a structure plot, open the @code{Appearance Options} menu and select values for the @code{Set Graph Height}, @code{Set Thickness of Each Subject} and @code{Set Distance Between Graphs} boxes.

@item Horizontal/Vertical Orientation

To set the orientation of the structure plot, and select @code{Horizontal} or @code{Vertical} from the bottom drop down menu.

@end itemize

@section Interacting with the Graph

Other settings and options can be changed by interacting with the graph. Certain elements can be clicked to view or modify their options.


@itemize

@item Selecting Subjects

To select an individual subject on the structure plot, click on the subject on the plot. This will bring up a subject menu where you can view the data about the subject (from the phenotype data file) and gives the option to hide the subject from the plot.

@item Population Group Name and Order

To select a population group, click on the population group label for the group. This will bring up a menu where you can change the Name of the group and also shift the group left/right (or up/down) in the graph.

@item Changing the colours and order of colours and individuals

This option allows you to 
@itemize
@item change colours (e.g., change red to blue)
@item change the order of the colours (e.g., on a horizontal chart, move
the red segments from below the blue segments to above the red segments
@item order the individuals within a population group by an ancestral group.
@end itemize

Right click anywhere on a graph and select @code{Population Group
Options}. 

@iftex
The menu below shows
@center @image{popgroupopts,12cm}
@end iftex


@ifhtml
The menu below shows
@image{popgroupopts,15cm}
@end ifhtml


From the next menu, click the button next to the colour you wish to
change and from the next dialog, click the @code{Change \ldots} button
to change the colour or the @code{Shift Up} and @code{Shift Down}
buttons (or the @code{Shift Left} and @code{Shift Right} buttons) to
change the order of the colours (i.e., on a horizonal graph, moving
colours up and down; on a vertical graph moving them left and right).

Clicking on a ``Sort indivs by colour'' button, will sort the
@emph{individuals} in each population group in order (left to right on a
horizontal graph; top to bottom on vertical graph) so that the
individual with the least ancestry represented by that colour is first,
and the one with the greatest is last.



@iftex
For example if we have
@center @image{famorder,12cm}

and click on the @emph{Sort indivs} next to the blue colour then we get.

@center @image{blueorder,12cm}
@end iftex


@ifhtml
For example if we have
@center @image{famorder,15cm}

and click on the @emph{Sort indivs} next to the blue colour then we get.

@center @image{blueorder,15cm}
@end ifhtml




Clicking on ``Dominant colour'' orders each population group in a
similar way, but instead of sorting each population group on the same
colour, Genesis will compute the dominant ancestral component for that
group and then order the individuals in that population group by that
component.

The @emph{Fam order} option is essentially an undo: the individuals are
displayed in the relative order that they appear in the fam file. 

The ordering of individuals
by component is not strict. If two individuals have a very similar but
not equal  primary component, then a secondary component is used (this
is more likely to lead to put similar individuals close to each other).
Note that these options are being refined and behaviour may change. 


@item Recolouring a  graph based on another graph

A common use case is to have structure charts for multiple values of
@emph{K}. When multiple graphs are imported some of the most glaring
apparent differences will not be due to different numbers of colours but
by arbitrary choices of which colours were used. Even though different
values of @emph{K} are used, typically  a column from one value of
@emph{K} will correspond to a column from another value of
@emph{K}. However, since the order of the columns is arbitrary the
colours are arbitrary. Genesis has an option which tries to match the
colours of of one graph with respect to another graph.



@iftex
For example a common case might be someting like:

@center @image{multdifferent,12cm}
@end iftex

@ifhtml
For example a common case might be someting like:

@center @image{multdifferent,15cm}
@end ifhtml

To recolour a graph, right click anywhere on a graph and select @code{Population Group
Options} and choose either @emph{Colour this graph similar to next} or
@emph{Colour this graph similar to previous} (these options only appear
if it makes sense). Genesis will recolour.


@iftex
In our example we will get

@center @image{multsame,12cm}
@end iftex

@ifhtml
For example a common case might be someting like:

@center @image{multsame,15cm}
@end ifhtml

Note that this option does not guarantee to recolour optimally. Rather
it is intended to reduce the load on the user by making sensible choices
for obvious colouring. (Indeed it is not clear what ``optimal'' means,
or best to do colouring. For example, if a ``yellow'' colour splits into
``yellow'' and ``magenta'' which new component should be yellow and
which magenta may require insight into populatio dynamics). A very
simple heuristic is currently used, which works well in
practice. However, this will improve in time.

@item Searching for a Subject

To search for a subject in the graph by name, click the @code{Search for individual} button in the toolbar. In the dialog, enter the Name (first, last or both) of the individual you wish to find and click @code{Ok}. If the individual was found in the data, it will be selected and the subject dialog for that individual will open. If the individual was not found, a message will displayed.
@end itemize

@section Annotating the Graph


@itemize

@item Creating a Label

To create a label and annotate the graph, right click on the graph where the label is to be placed, and click @code{Create Label at Mouse Pointer}. Then enter the label's text and click @code{OK} to place the label.

@item Editing or Deleting a Label

To reposition a label, click on it and drag to where it should go. If
you press the shift key while dragging the label there is a snap to
grid feasture. To edit a label that has been created, click on the
label to bring up the Label dialog. From this dialog you can edit the
label's text, reposition the label or delete the label.

@item Hiding individuals

To hide a subject from the graph, click on the subject on the graph to bring up the subject dialog. From this menu you can choose to hide the subject from the graph.

@item Hiding Groups 

To hide a population group from the graph, click on the group in the key to bring up the population group dialog and check the box labelled @code{Hide this group from the graph}.

@item Showing Hidden Subjects and groups 

To reshow a subject that has been hidden, click on the @code{Select Hidden Individuals or Groups} button and from the drop down menu that pops up, select the name of the subject or group that you wish to show. From the subject dialog you can now uncheck the @code{Hide this Individual from the Graph} or @code{Hide this group from the Graph} checkbox.

@item Drawing lines and arrows

@code{Genesis} provides very simple functionality for adding lines and
arrows. Click on the icon and the place the line or arrow by (a)
clicking on the point where the line/arrow should start, (b)
@emph{dragging} to the point where the line should finish, and (c)
releasing the mouse.  If you press the shift key down at the same
time, then only vertical or horizontal lines can be produced.

Lines and arrows can be deleted or moved -- if you press the shift key down at
the same time as moving there is a ``snap to grid'' feature. Note that
lines cannot be shortened or lengthened, and nor can the orientation change.




@end itemize



@section Useful scripts

@subsection structure2CLUMPP: Wrapper script for the Structure tool

@code{Genesis} supports Admixture Q files and CLUMPP output files
natively. CLUMPP's output format is a derivative of the Structure tool's
output. (Thus our naming convention is somewhat inaccurate, since CLUMPP
format is really a sub-part of the Structure format). When Structure
runs, it produces log information, summary information about the
population and the inferred ancestry of individuals. This inferred
ancestry is what we want and can be found in the middle of the output
file. 

The script @code{structure2CLUMPP} takes one mandatory argument, the
file name of a structure output file.

@verbatim
python structure2CLUMPP testdata1.out_f 
@end verbatim

@noindent
By default, output is placed on standard output. The @code{--outbase} flag
can be used to set the base of the output name. The script appends to
this base the suffix @emph{K}.Q, where @emph{K} is the number of columns
in the ancestry file (so as to be consistent with @emph{admixture}).

@verbatim
python structure2CLUMPP --outbase data testdata1.out_f 
@end verbatim

@noindent
If there are 4 columns in the file testdata1.out_f, then this will
produce a file @emph{data.4.Q}.

The script also has a flag @code{--produce-fam} which can be used to
produce a bare bones fam file if needed.

@noindent
The full usage is

@verbatim
usage: structure2CLUMPP [-h] [--outbase OUTBASE] [--produce-fam FAM_NAME] N

produce admixture style output from structure output

positional arguments:
  N                     structure file

optional arguments:
  -h, --help            show this help message and exit
  --outbase OUTBASE     output file name base (default output to standard out)
  --produce-fam FAM_NAME
                        produce fam file
@end verbatim

@noindent
@b{Technical details}.
The output of the structure program contains various information,
including log and FST data. Immediately after the lines that start

@verbatim
Inferred ancestry of individuals:
        Label (%Miss) Pop:  Inferred clusters
@end verbatim

@noindent
follow the inferred ancestry of each individual followed by blank
line. This is what we want. An extract might look something like this:

@verbatim
  7        7    (0)    1 :  0.017 0.014 0.970 
  8        8    (0)    1 :  0.009 0.005 0.986 
  9        9    (0)    1 :  0.353 0.116 0.531 
@end verbatim

@noindent
Here @emph{K=3}, and the ancestry of each individual can be found to the
right of the colon (for our purposes we can ignore what's to the left of
the colon).  The @code{structure2CLUMPP} script extracts out this part
of the output from the @code{structure} program and produces output
which could be output from CLUMPP. The @code{Genesis} program can read
this input.

@subsection sortfamQwithin.py --- ordering invididuals by colour

Although Genesis directly supports some ordering by individuals, we have
a script that has more sophisticated functionality. In time this will be
migrated into Genesis.
Usually individuals are ordered in the fam file by group, but within the
group the ordering is arbitrary. In admixed populations this may lead to 
confusing pictures because individuals who are adjacent to each other
may have different admixtures so one gets a very jagged chart where a
pattern is hard to discern. The script @emph{sortfamQwithin.py}
consistently sorts a fam and Q file(s) so that within each group, the
individuals are sorted by the dominant ancestral population for that
group. This script is documented here:

@url{http://www.bioinf.wits.ac.za/software/poputils/}

@subsection Other scripts

There are other useful scripts like @emph{fams2phe} and @emph{popifyfam.py}
which can be used to create phenotype files in @url{http://www.bioinf.wits.ac.za/software/poputils/}


@node Creating PCA Plots, Saving and Exporting, Creating Structure Plots, Top


@chapter PCA Plots


@section Input data format

@code{Genesis} takes as input one mandatory file, and one optional file:

@itemize
@item The compulsory input file is a PCA file. In this version of the
code, threeinput formats are supported: eigenstrat, plink and SNPRelate.

@item A phenotype file (see the description in the previous section),
which labels each individual. In addition to plink-style phentoype files,
eigenstrat pca.evec files are legal as input (the phentoype is often in
thelast column).


@end itemize

We have scripts that convert from other popular PCA formats (PLINK,
flashpca) to a format the Genesis understands. These scripts are
discussed in the section @emph{Advice on data formats} below. We
hope that in future versions of Genesis that this will be handled
natively.


@section Data input

To input Eigenstrat files, click @code{File}, click @code{New PCA} or the @code{New
PCA} button on the toolbar. On the screen that opens, click @code{Import
Data File} and navigate to the PCA data file outputted by the Eigenstrat
software. Then optionally click @code{Import Phenotype File} and
navigate to the phenotype data file.  To input SNPRelate Data, click
@code{File} click @code{New PCA} or the @code{New PCA} button on the toolbar. On
the screen that opens, click @code{Import Data File} and navigate to the
PCA data file outputted by the Relate package. The relate package file
includes the phenotype information in the data file.

In the drop-down menus, select the 2 or 3 PCAs to plot as the axes and
select the column of the phenotype file that will be used to group the
data. To draw the graph, click @code{Finish} or click @code{Next} to
access the Appearance Options menu (See below...).

@itemize

@item Editing PCAs/Phenotype Column

If a graph has already been plotted, and you wish to change the PCAs to be the axes or the column of the phenotype data to represent the data, you can access the initial menu by clicking the @code{Data Options}
button on the toolbar, or clicking @code{Graph} click @code{Data Options}.

@item Appearance Options

The Appearance Options menu can be accessed through the @code{New PCA}
button by clicking @code{Next} after importing the files or by clicking
the @code{Appearance Options} button on the toolbar, or clicking
@code{Graph} click @code{Appearance Options}.

@item Heading

To set/change the heading, open the @code{Appearance Options} menu and type the heading into the text box that says ``Set Heading.'' To change the font of the heading, click @code{Select Heading Font} and select the font of choice.

@item Border

To show/hide the border open the @code{Appearance Options} menu and (un)check the @code{Show Border} checkbox.

@item Axes

To show/hide the axes, axis labels, grid and scale, open the @code{Appearance Options} menu and (un)check the relevant checkboxes.

@item Key Options

To set the position of the key, open the @code{Appearance Options} menu and select the key position from the drop down menu. To hide the key, select @code{No Key} from the drop down menu. To change the font of the key, click @code{Select Key Font} and select the font of choice.

Other settings and options can be changed by interacting with the graph. Certain elements can be clicked to view or modify their options.

@item Selecting Subjects

To select an individual subject on the structure plot, click on the subject on the plot. This will bring up a subject menu where you can view the data about the subject (from the phenotype data file) and gives options to change the subject's icon as well as to delete the subject and hide or place the subject on top.

@item Changing Subject's Icon

To change an individual subject's icon, click the subject on the graph and from the dialog that opens, select the icon shape and colour. Selecting the shape @code{Default} will set the shape of the icon to the group's shape and checking @code{Clear all icon data specific to this individual} will set the icon's shape and colour to the group's.

@item Placing a Subject on Top

To place an individual subject on top, click the subject on the graph and from the dialog that opens, check the @code{Place this individual on top} checkbox and click @code{Done}.

@item Changing the Population Group Names

To change a population group's name, click on the group in the key. This will bring up the Population Group dialog. From here you can set the group name and click @code{Done}.

@item Changing the Population Group Icons

To change a population group's icon, click on the group in the key. This will bring up the Population Group dialog. From here you can set the shape and colour of the icon and click @code{Done}.

@item Changing the Order of Population Groups in the Key

To change a the order of the population groups in the key, click on the group in the key. This will bring up the Population Group dialog. From here you can click @code{Shift Up} or @code{Shift Down} shift the group's order in the key.

@end itemize

@section Annotating the Graph

@itemize

@item Creating a Label

To create a label and annotate the graph, right click on the graph where the label is to be placed, and click @code{Create Label at Mouse Pointer}. Then enter the label's text and click @code{OK} to place the label.

@item Editing or Deleting a Label

To edit a label that has been created, click on the label to bring up
the Label dialog. From this dialog you can edit the label's text,
reposition the label or delete the label. Labels can be moved:
pressing the shift key while dragging creates a snap to grid feature.


@item Drawing lines and arrows

@code{Genesis} provides very simple functionality for adding lines and
arrows. Click on the icon and the place the line or arrow by (a)
clicking on the point where the line/arrow should start, (b)
@emph{dragging} to the point where the line should finish, and (c)
releasint the  mouse. Currently no line editing functionality is
provided, other than being able to delete a a line.


@end itemize

@section Hiding Subjects and Population Groups from the Graph

@itemize
@item Hiding Subjects

To hide a subject from the graph, click on the subject on the graph to bring up the subject dialog. From this menu you can choose to hide the subject from the graph.

@item Hiding Groups 

To hide a population group from the graph, click on the group in the key to bring up the population group dialog and check the box labelled @code{Hide this group from the graph}.

@item Showing Hidden Subjects and Groups 

To reshow a subject that has been hidden, click on the @code{Select Hidden Individuals or Groups} button and from the drop down menu that pops up, select the name of the subject or group that you wish to show. From the subject dialog you can now uncheck the @code{Hide this Individual from the Graph} or @code{Hide this group from the Graph} checkbox.

@end itemize

@section Searching for a Subject

To search for a subject in the graph by name, click the @code{Search for individual} button in the toolbar. In the dialog, enter the Name (first, last or both) of the individual you wish to find and click @code{Ok}. If the individual was found in the data, it will be selected and the subject dialog for that individual will open. If the individual was not found, a message will display.

@section Rotating the Graph

To rotate a 3D PCA plot, click the @code{Show/Hide 3D PCA Rotate Panel} button in the toolbar. This will bring up the rotate panel which contains a slider which can be dragged to rotate the graph about the z-axis.


@section Advice on data formats

Eigenstrat is directly supported by the Genesis. 

@subsection SNPRelate

The SNPRelate R package of Zheng @emph{et al} [2012] can be used to do
PC-analysis. However, since it is an R-package there is no SNPRelate
default format since output is fully programmable in R. We support the
following output: a file that contains the eigenvalues, followed by the
eigenvectors, produced using the following R commands.

@verbatim
pca <- snpgdsPCA(genofile,snp.id=snpset)
write.table(pca$eigenval,"pca.rel",sep="\t",quote=FALSE)

tab1 <- data.frame(sample.id = pca$sample.id,
     pop = factor(pop_code)[match(pca$sample.id, sample.id)],
     EV1 = pca$eigenvect[,1],
     EV2 = pca$eigenvect[,2],
     EV3 = pca$eigenvect[,3],
     EV4 = pca$eigenvect[,4],
     EV5 = pca$eigenvect[,5],
     EV6 = pca$eigenvect[,6],
     EV7 = pca$eigenvect[,7],
     EV8 = pca$eigenvect[,8],
     EV9 = pca$eigenvect[,9],
     EV10 = pca$eigenvect[,10],
     stringsAsFactors = FALSE)

write.table(tab1,"pca.rel",sep="\t",quote=FALSE,append=TRUE)
@end verbatim


@subsection flashpca

FlashPCA is designed to perform PCA on very large data set. It takes as
input a plink BED and BIM file and produces eigenvectors or principal
components. We have a script @emph{flashpca2evec} which converts the
data into a format that @code{Genesis} can read. Because the flashpca
output has no information about the sample IDs, @emph{flashpca2evec}
also needs the fam file as input. This script @strong{requires Python 2.7}.

By default, flashpca calls its output files @emph{eigenvalues.txt} and
@emph{eigenvectors.txt} and this is (by default) what @emph{flash2pca}
expects. For example:

@verbatim
flashpca2evec --fam data.fam --out data.evec
@end verbatim

@noindent
However, if the files have other names, the appropriate flags can be used

@verbatim
flashpca2evec --fam data.fam --eigenval file1.evals --eigenvec sample.csv --out data.evec
@end verbatim

@subsection plink2evec

PLINK 2 [Purcell and Chang 2014] (and its alpha release plink 1.9)
supports PCA directly. Genesis can handle these files natively but
assumes that the default plink's default naming convention is used
(e.g., a @emph{.eigenvec} suffix). If this is not followed, Genesis will
not be able to recognise the file type.  Thus plink2evec is bundled for
that purpose.

 @emph{plink2evec} converts the plink output files
into the format that Genesis can read.

By default PLINK calls its output files @emph{plink.eigenval} and
@emph{plink.eigenvec} and this is (by default) what @emph{plink2evec}
expects. For exmaple:

@verbatim
plink2evec --out result.pca.evec
@end verbatim

@noindent
However, if the files have other names, the appropriate flags can be used

@verbatim
plink2evec --eigenval file1.evals --eigenvec sample.csv --out data.evec
@end verbatim

@noindent
And if as is common in plink usage, the eigenvectors and eigenvalues
file was specified by using the @emph{plink} @code{--out} flag, then 
@emph{plink2evec} can use its @code{--bfile} flag

@verbatim
plink --bfile sample --pca --out sample
plink2evec --bfile sample --out sample.pca.evec
@end verbatim


@node Saving and Exporting, Conclusion, Creating PCA Plots, Top

@chapter Saving, Loading and Exporting Projects

@section Saving a Project

To save a project currently in use, click the @code{Save Project} button on the toolbar or click @code{File} click @code{Save Project}. Enter a filename and navigate to the location you wish to save the file and click @code{Save}.

We recommend regular saving. Although, Genesis is stable, like other
software it may crash and saving is easy.

@b{Please note that in the Genesis GUI, that you may have several
projects open at once. Saving only saves the current project!}




@section Loading a Project 

To load a project previously saved, click the @code{Load Project} button on the toolbar or click @code{File} click @code{Load Project}. Navigate to and select the file you wish to load and click @code{Load}.

@section Exporting Graphs

Once you are satisfied with the graph you are currently working on, you can export the graph as an image file (.png) or in a PDF. To do so, click the @code{Export} button on the toolbar or click @code{File} click @code{Export}.

From the dialog that opens, select whether to export as a PNG, SVG image
or as a PDF, then navigate to the location you wish to save the file and
click @code{OK}.

@subsection Notes on exporting as a PDF

Genesis will export the graph as it is on the screen in front of you, and will scale this image to fit on the width of an A4 page. This may cause larger admixture project's images to be of too high detail to view all the detail on the monitor of your computer all at once. This is normal and expected. The detail will be stored there - it may be necessary to zoom in to view it all -- and if the image is printed, the detail will be there (assuming the printer is of high enough quality).

@subsection Notes on exporting as a PNG image

PNG (Portable Network Graphics) is a cross-platform image file format that can be handled by almost all good image viewers and editors. When exporting as a PNG file, note that the image will be the same size as it is on the screen as you export it. This means that resizing the Genesis window between PCA exports will create different sized images (Admixture sizes are determined by the options in the @code{Appearance Options}). This is important as PNG images do not scale up, i.e. a smaller image will become blurry if it is stretched too big. Keep this in mind when exporting as a PNG image.


@section Error messages

@itemize
@item 1: Only 1 column in input file -- not allowed 
@item 2: The admix or phenotpe file has a varying number of columns
@item 3: Java gives a NumberFormat error in the input file. 
@item 5: File is not found

@item 102: I think you have a plink eigenvector file but a line does not parse.

@item 300: PCA read is not in SMARTPCA format.

           Hint: if you have a PLINK file make sure that your fam file
           is in the directory.

@item 400: Error in data file: file may be empty



@end itemize



@node Conclusion, , Saving and Exporting, Top


@chapter Conclusion

Any technical questions on the use of @code{Genesis} should be 
sent to @code{genesis@@bioinf.wits.ac.za}.



@section Literature cited

@itemize

@item G Abraham, M. Inouye (2014). Fast principal component
analysis of large-scale genome-wide data. @emph{PLoS One} @strong{9}(4)
p. e93766, doi:10.1371/journal.pone.0093766

@item Alexander, D. H., Novembre, J., and Lange, K. (2009). Fast model-based estimation of ancestry in unrelated individuals. @emph{Genome Research}, 19(9), 1655–64. doi:10.1101/gr.094052.109

@item Jakobsson, M., and Rosenberg, N. A. (2007). CLUMPP: a cluster matching and permutation program for dealing with label switching and multimodality in analysis of population structure. @emph{Bioinformatics}, 23(14), 1801–1806.

@item Patterson, N., Price, A. L., and Reich, D. (2006). Population structure and eigenanalysis. @emph{PLoS Genetics}, 2(12), e190. doi:10.1371/journal.pgen.0020190

@item Pritchard, J. K., Stephens, M., & Donnelly, P. (2000). Inference of population structure using multilocus genotype data. @emph{Genetics}, 155(2), 945–59. 

@item Purcell S, Neale B, Todd-Brown K, Thomas L, Ferreira MAR, 
	Bender D, Maller J, Sklar P, de Bakker PIW, Daly MJ & Sham PC (2007) 
        PLINK: a toolset for whole-genome association and population-based 
	linkage analysis. American Journal of Human Genetics, 81.

@item S. Purcell and C. Chang 2014. PLINK.  @url{https://www.cog-genomics.org/plink2}

@item Xiuwen Zheng, David Levine, Jess Shen, Stephanie M. Gogarten,
Cathy Laurie, Bruce S. Weir. A High-performance Computing Toolset for
Relatedness and Principal Component Analysis of SNP Data. @emph{Bioinformatics}
2012; doi:10.1093/bioinformatics/bts606

@end itemize





@section Copyright

    Copyright (C) 2014, Robert W Buchmann, University of the Witwatersrand

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see @url{http://www.gnu.org/licenses/}

@bye


